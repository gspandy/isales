<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd">

	<!-- dubbo的监控日志方法 -->
	<bean id="dubboMonitorLogDAO" class="org.mybatis.spring.mapper.MapperFactoryBean" parent="baseLogDAO">
		<property name="mapperInterface" value="com.haier.isales.system.monitor.dao.DubboMonitorLogDAO" />
	</bean>
	<bean id="dubboServiceMonitor" class="com.haier.isales.system.monitor.service.impl.DubboMonitorLoggerImpl">
	</bean>
	<!-- dubbo接口监控的AOP配置 -->
	<aop:config>
		<aop:aspect id="monitorDubbo" ref="dubboServiceMonitor">
			<aop:pointcut id="dubboPointCut"
				expression="execution(* com.haier..service.impl.*ClientImpl.*(..)) and args(..)" />
			<aop:around method="around" pointcut-ref="dubboPointCut" />
		</aop:aspect>
	</aop:config>
	
	<!--dubbo返回值的统一封装方法 -->
	<bean id="dubboResultInterceptor" class="com.haier.isales.interceptor.DubboResultInterceptor">
	</bean>
	<aop:config>
		<aop:aspect id="dubboResultAop" ref="dubboResultInterceptor">
			<aop:pointcut id="target"
				expression="execution(* com.haier..service.impl.*ClientImpl.*(..)) and args(..)" />
			<aop:around method="around" pointcut-ref="target" />
		</aop:aspect>
	</aop:config>
	

</beans>