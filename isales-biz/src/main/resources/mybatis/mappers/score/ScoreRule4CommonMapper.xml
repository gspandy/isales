<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.isales.score.dao.ScoreRuleDAO">
	<!-- =========================================================== -->
	<!-- 定义resultMap -->
	<!-- =========================================================== -->
	<resultMap id="ScoreRuleResultMap" type="com.haier.isales.score.domain.ScoreRuleDomain">
		<id column="id" property="id"  jdbcType="BIGINT"  />
		<result column="score_expression" property="scoreExpression"  jdbcType="VARCHAR"  />
		<result column="content_expression" property="contentExpression"  jdbcType="VARCHAR"  />
		<result column="remark" property="remark"  jdbcType="VARCHAR"  />
	</resultMap>
	
	<!-- =========================================================== -->
	<!-- 一些公共变量设置 -->
	<!-- =========================================================== -->
	<!-- 查询的所有列 -->
	<sql id="all_Column_List">
	ID	,
	SCORE_EXPRESSION	,
	CONTENT_EXPRESSION	,
	REMARK		
	</sql>
	
	<!-- 分页查询的公共变量 -->
	<sql id="pagination_Tail">
	<![CDATA[
		limit #{pageCond.firstResult},#{pageCond.pageSize}
	]]>
	</sql>
	
	<!-- 查询的所有变量判断 -->
	<sql id="searchConditions">
		<if test="entity.id!=null">and id=#{entity.id}</if>
		<if test="entity.scoreExpression!=null">and score_expression like CONCAT('%',#{entity.scoreExpression},'%')</if>
		<if test="entity.contentExpression!=null">and content_expression like CONCAT('%',#{entity.contentExpression},'%')</if>
		<if test="entity.remark!=null">and remark like CONCAT('%',#{entity.remark},'%')</if>
	</sql>
	
	<!-- =========================================================== -->
	<!-- CommonDao中的dao实现类 -->
	<!-- =========================================================== -->
	<!-- 根据主键查询实体类的方法 -->
	<select id="findById" resultMap="ScoreRuleResultMap"
		parameterType="Long">
		select <include refid="all_Column_List"/>
		from isales_app.t_isales_score_rule
		where id = #{id}
	</select>
	
	<!-- 查询此实体表中所有数据的数量 -->
	<select id="count" resultType="long">
		select count(1) 
		from isales_app.t_isales_score_rule
	</select>
	
	<!-- 实体的保存法方法 -->
	<insert id="save" parameterType="com.haier.isales.score.domain.ScoreRuleDomain"  useGeneratedKeys="true" keyProperty="id" >
		insert into isales_app.t_isales_score_rule
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="scoreExpression!=null">
				SCORE_EXPRESSION	,
			</if>
			<if test="contentExpression!=null">
				CONTENT_EXPRESSION	,
			</if>
			<if test="remark!=null">
				REMARK		
			</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="scoreExpression!=null">
				#{scoreExpression}	,
			</if>
			<if test="contentExpression!=null">
				#{contentExpression}	,
			</if>
			<if test="remark!=null">
				#{remark}		
			</if>
		</trim>
	</insert>
	
	<!-- 实体的更新方法 -->
	<update id="update" parameterType="com.haier.isales.score.domain.ScoreRuleDomain">
		update isales_app.t_isales_score_rule
		<set>
			SCORE_EXPRESSION = #{scoreExpression},
			CONTENT_EXPRESSION = #{contentExpression},
			REMARK = #{remark},
		</set>
		where id = #{id}
	</update>	
	
	<!-- 按照ID主键删除一条记录的功能 -->
	<delete id="delete" parameterType="Long">
		delete from isales_app.t_isales_score_rule 
		where id = #{id}
	</delete>
	
	<!-- 根据参数查询分页查询所有的对象内容 -->
	<select id="findByParams" resultMap="ScoreRuleResultMap" >
		select <include refid="all_Column_List"/>
		from isales_app.t_isales_score_rule
		where 1=1
		<include refid="searchConditions"/>
		<include refid="pagination_Tail"/>
	</select>
	<!-- 根据参数查询分页查询所有的对象内容 -->
	<select id="findCountByParams" resultType="integer" >
		select count(1)
		from isales_app.t_isales_score_rule
		where 1=1
		<include refid="searchConditions"/>
	</select>
</mapper>