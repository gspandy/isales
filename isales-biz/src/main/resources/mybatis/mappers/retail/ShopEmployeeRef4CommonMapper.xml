<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.isales.retail.shopemployeeref.dao.ShopEmployeeRefDAO">
	<!-- =========================================================== -->
	<!-- 定义resultMap -->
	<!-- =========================================================== -->
	<resultMap id="ShopEmployeeRefResultMap" type="com.haier.isales.retail.shopemployeeref.domain.ShopEmployeeRefDomain">
		<id column="id" property="id"  jdbcType="BIGINT"  />
		<result column="month" property="month"  jdbcType="VARCHAR"  />
		<result column="user_code" property="userCode"  jdbcType="VARCHAR"  />
		<result column="shop_code" property="shopCode"  jdbcType="VARCHAR"  />
		<result column="shop_name" property="shopName"  jdbcType="VARCHAR"  />
		<result column="synchronous_time" property="synchronousTime"  jdbcType="TIMESTAMP"  />
		<result column="remark" property="remark"  jdbcType="VARCHAR"  />
	</resultMap>
	
	<!-- =========================================================== -->
	<!-- 一些公共变量设置 -->
	<!-- =========================================================== -->
	<!-- 查询的所有列 -->
	<sql id="all_Column_List">
	ID	,
	MONTH	,
	USER_CODE	,
	SHOP_CODE	,
	SHOP_NAME	,
	SYNCHRONOUS_TIME	,
	REMARK		
	</sql>
	
	<!-- 分页查询的公共变量 -->
	<sql id="pagination_Tail">
	<![CDATA[
		limit #{pageCond.firstResult},#{pageCond.pageSize}
	]]>
	</sql>
	
	<!-- 查询的所有变量判断 -->
	<sql id="searchConditions">
		<if test="entity.id!=null">and id=#{entity.id}</if>
		<if test="entity.month!=null">and month like CONCAT('%',#{entity.month},'%')</if>
		<if test="entity.userCode!=null">and user_code like CONCAT('%',#{entity.userCode},'%')</if>
		<if test="entity.shopCode!=null">and shop_code like CONCAT('%',#{entity.shopCode},'%')</if>
		<if test="entity.shopName!=null">and shop_name like CONCAT('%',#{entity.shopName},'%')</if>
		<!-- java.util.Date synchronous_time has been ignored!!! -->
		<if test="entity.remark!=null">and remark like CONCAT('%',#{entity.remark},'%')</if>
	</sql>
	
	<!-- =========================================================== -->
	<!-- CommonDao中的dao实现类 -->
	<!-- =========================================================== -->
	<!-- 根据主键查询实体类的方法 -->
	<select id="findById" resultMap="ShopEmployeeRefResultMap"
		parameterType="Long">
		select <include refid="all_Column_List"/>
		from isales_app.t_isales_shop_employee_ref
		where id = #{id}
	</select>
	
	<!-- 查询此实体表中所有数据的数量 -->
	<select id="count" resultType="long">
		select count(1) 
		from isales_app.t_isales_shop_employee_ref
	</select>
	
	<!-- 实体的保存法方法 -->
	<insert id="save" parameterType="com.haier.isales.retail.shopemployeeref.domain.ShopEmployeeRefDomain" >
		insert into isales_app.t_isales_shop_employee_ref
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id!=null">
				ID	,
			</if>
			<if test="month!=null">
				MONTH	,
			</if>
			<if test="userCode!=null">
				USER_CODE	,
			</if>
			<if test="shopCode!=null">
				SHOP_CODE	,
			</if>
			<if test="shopName!=null">
				SHOP_NAME	,
			</if>
			<if test="synchronousTime!=null">
				SYNCHRONOUS_TIME	,
			</if>
			<if test="remark!=null">
				REMARK		
			</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id!=null">
				#{id}	,
			</if>
			<if test="month!=null">
				#{month}	,
			</if>
			<if test="userCode!=null">
				#{userCode}	,
			</if>
			<if test="shopCode!=null">
				#{shopCode}	,
			</if>
			<if test="shopName!=null">
				#{shopName}	,
			</if>
			<if test="synchronousTime!=null">
				#{synchronousTime}	,
			</if>
			<if test="remark!=null">
				#{remark}		
			</if>
		</trim>
	</insert>
	
	<!-- 实体的更新方法 -->
	<update id="update" parameterType="com.haier.isales.retail.shopemployeeref.domain.ShopEmployeeRefDomain">
		update isales_app.t_isales_shop_employee_ref
		<set>
			MONTH = #{month},
			USER_CODE = #{userCode},
			SHOP_CODE = #{shopCode},
			SHOP_NAME = #{shopName},
			SYNCHRONOUS_TIME = #{synchronousTime},
			REMARK = #{remark},
		</set>
		where id = #{id}
	</update>	
	
	<!-- 按照ID主键删除一条记录的功能 -->
	<delete id="delete" parameterType="Long">
		delete from isales_app.t_isales_shop_employee_ref 
		where id = #{id}
	</delete>
	
	<!-- 根据参数查询分页查询所有的对象内容 -->
	<select id="findByParams" resultMap="ShopEmployeeRefResultMap" >
		select <include refid="all_Column_List"/>
		from isales_app.t_isales_shop_employee_ref
		where 1=1
		<include refid="searchConditions"/>
		<include refid="pagination_Tail"/>
	</select>
	<!-- 根据参数查询分页查询所有的对象内容 -->
	<select id="findCountByParams" resultType="integer" >
		select count(1)
		from isales_app.t_isales_shop_employee_ref
		where 1=1
		<include refid="searchConditions"/>
	</select>
</mapper>