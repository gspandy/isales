<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.isales.retail.salestarget.dao.SalestargetDAO">
	<!-- =========================================================== -->
	<!-- 定义resultMap -->
	<!-- =========================================================== -->
	<resultMap id="SalestargetResultMap" type="com.haier.isales.retail.salestarget.domain.SalestargetDomain">
		<id column="id" property="id"  jdbcType="BIGINT"  />
		<result column="operator_id" property="operatorId"  jdbcType="BIGINT"  />
		<result column="user_code" property="userCode"  jdbcType="VARCHAR"  />
		<result column="org_code" property="orgCode"  jdbcType="VARCHAR"  />
		<result column="org_name" property="orgName"  jdbcType="VARCHAR"  />
		<result column="shop_id" property="shopId"  jdbcType="VARCHAR"  />
		<result column="shop_name" property="shopName"  jdbcType="VARCHAR"  />
		<result column="product_line" property="productLine"  jdbcType="VARCHAR"  />
		<result column="product_line_name" property="productLineName"  jdbcType="VARCHAR"  />
		<result column="year" property="year"  jdbcType="INTEGER"  />
		<result column="month" property="month"  jdbcType="INTEGER"  />
		<result column="target_amount" property="targetAmount"  jdbcType="DECIMAL"  />
		<result column="target_num" property="targetNum"  jdbcType="DECIMAL"  />
		<result column="update_time" property="updateTime"  jdbcType="TIMESTAMP"  />
		<result column="create_time" property="createTime"  jdbcType="TIMESTAMP"  />
		<result column="remark" property="remark"  jdbcType="VARCHAR"  />
	</resultMap>
	
	<!-- =========================================================== -->
	<!-- 一些公共变量设置 -->
	<!-- =========================================================== -->
	<!-- 查询的所有列 -->
	<sql id="all_Column_List">
	ID	,
	OPERATOR_ID	,
	USER_CODE	,
	ORG_CODE	,
	ORG_NAME	,
	SHOP_ID	,
	SHOP_NAME	,
	PRODUCT_LINE	,
	PRODUCT_LINE_NAME	,
	YEAR	,
	MONTH	,
	TARGET_AMOUNT	,
	TARGET_NUM	,
	UPDATE_TIME	,
	CREATE_TIME	,
	REMARK		
	</sql>
	
	<!-- 分页查询的公共变量 -->
	<sql id="pagination_Tail">
	<![CDATA[
		limit #{pageCond.firstResult},#{pageCond.pageSize}
	]]>
	</sql>
	
	<!-- 查询的所有变量判断 -->
	<sql id="searchConditions">
		<if test="entity.id!=null">and id=#{entity.id}</if>
		<if test="entity.operatorId!=null">and operator_id=#{entity.operatorId}</if>
		<if test="entity.userCode!=null">and user_code like CONCAT('%',#{entity.userCode},'%')</if>
		<if test="entity.orgCode!=null">and org_code like CONCAT('%',#{entity.orgCode},'%')</if>
		<if test="entity.orgName!=null">and org_name like CONCAT('%',#{entity.orgName},'%')</if>
		<if test="entity.shopId!=null">and shop_id like CONCAT('%',#{entity.shopId},'%')</if>
		<if test="entity.shopName!=null">and shop_name like CONCAT('%',#{entity.shopName},'%')</if>
		<if test="entity.productLine!=null">and product_line like CONCAT('%',#{entity.productLine},'%')</if>
		<if test="entity.productLineName!=null">and product_line_name like CONCAT('%',#{entity.productLineName},'%')</if>
		<if test="entity.year!=null">and year=#{entity.year}</if>
		<if test="entity.month!=null">and month=#{entity.month}</if>
		<if test="entity.targetAmount!=null">and target_amount=#{entity.targetAmount}</if>
		<if test="entity.targetNum!=null">and target_num=#{entity.targetNum}</if>
		<!-- java.util.Date update_time has been ignored!!! -->
		<!-- java.util.Date create_time has been ignored!!! -->
		<if test="entity.remark!=null">and remark like CONCAT('%',#{entity.remark},'%')</if>
	</sql>
	
	<!-- =========================================================== -->
	<!-- CommonDao中的dao实现类 -->
	<!-- =========================================================== -->
	<!-- 根据主键查询实体类的方法 -->
	<select id="findById" resultMap="SalestargetResultMap"
		parameterType="Long">
		select <include refid="all_Column_List"/>
		from isales_app.t_isales_sales_target
		where id = #{id}
	</select>
	
	<!-- 查询此实体表中所有数据的数量 -->
	<select id="count" resultType="long">
		select count(1) 
		from isales_app.t_isales_sales_target
	</select>
	
	<!-- 实体的保存法方法 -->
	<insert id="save" parameterType="com.haier.isales.retail.salestarget.domain.SalestargetDomain"  useGeneratedKeys="true" keyProperty="id" >
		insert into isales_app.t_isales_sales_target
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="operatorId!=null">
				OPERATOR_ID	,
			</if>
			<if test="userCode!=null">
				USER_CODE	,
			</if>
			<if test="orgCode!=null">
				ORG_CODE	,
			</if>
			<if test="orgName!=null">
				ORG_NAME	,
			</if>
			<if test="shopId!=null">
				SHOP_ID	,
			</if>
			<if test="shopName!=null">
				SHOP_NAME	,
			</if>
			<if test="productLine!=null">
				PRODUCT_LINE	,
			</if>
			<if test="productLineName!=null">
				PRODUCT_LINE_NAME	,
			</if>
			<if test="year!=null">
				YEAR	,
			</if>
			<if test="month!=null">
				MONTH	,
			</if>
			<if test="targetAmount!=null">
				TARGET_AMOUNT	,
			</if>
			<if test="targetNum!=null">
				TARGET_NUM	,
			</if>
			<if test="updateTime!=null">
				UPDATE_TIME	,
			</if>
			<if test="createTime!=null">
				CREATE_TIME	,
			</if>
			<if test="remark!=null">
				REMARK		
			</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="operatorId!=null">
				#{operatorId}	,
			</if>
			<if test="userCode!=null">
				#{userCode}	,
			</if>
			<if test="orgCode!=null">
				#{orgCode}	,
			</if>
			<if test="orgName!=null">
				#{orgName}	,
			</if>
			<if test="shopId!=null">
				#{shopId}	,
			</if>
			<if test="shopName!=null">
				#{shopName}	,
			</if>
			<if test="productLine!=null">
				#{productLine}	,
			</if>
			<if test="productLineName!=null">
				#{productLineName}	,
			</if>
			<if test="year!=null">
				#{year}	,
			</if>
			<if test="month!=null">
				#{month}	,
			</if>
			<if test="targetAmount!=null">
				#{targetAmount}	,
			</if>
			<if test="targetNum!=null">
				#{targetNum}	,
			</if>
			<if test="updateTime!=null">
				#{updateTime}	,
			</if>
			<if test="createTime!=null">
				#{createTime}	,
			</if>
			<if test="remark!=null">
				#{remark}		
			</if>
		</trim>
	</insert>
	
	<!-- 实体的更新方法 -->
	<update id="update" parameterType="com.haier.isales.retail.salestarget.domain.SalestargetDomain">
		update isales_app.t_isales_sales_target
		<set>
			OPERATOR_ID = #{operatorId},
			USER_CODE = #{userCode},
			ORG_CODE = #{orgCode},
			ORG_NAME = #{orgName},
			SHOP_ID = #{shopId},
			SHOP_NAME = #{shopName},
			PRODUCT_LINE = #{productLine},
			PRODUCT_LINE_NAME = #{productLineName},
			YEAR = #{year},
			MONTH = #{month},
			TARGET_AMOUNT = #{targetAmount},
			TARGET_NUM = #{targetNum},
			UPDATE_TIME = #{updateTime},
			CREATE_TIME = #{createTime},
			REMARK = #{remark},
		</set>
		where id = #{id}
	</update>	
	
	<!-- 按照ID主键删除一条记录的功能 -->
	<delete id="delete" parameterType="Long">
		delete from isales_app.t_isales_sales_target 
		where id = #{id}
	</delete>
	
	<!-- 根据参数查询分页查询所有的对象内容 -->
	<select id="findByParams" resultMap="SalestargetResultMap" >
		select <include refid="all_Column_List"/>
		from isales_app.t_isales_sales_target
		where 1=1
		<include refid="searchConditions"/>
		<include refid="pagination_Tail"/>
	</select>
	<!-- 根据参数查询分页查询所有的对象内容 -->
	<select id="findCountByParams" resultType="integer" >
		select count(1)
		from isales_app.t_isales_sales_target
		where 1=1
		<include refid="searchConditions"/>
	</select>
</mapper>