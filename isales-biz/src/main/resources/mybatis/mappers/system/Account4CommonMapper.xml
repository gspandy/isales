<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.isales.system.account.dao.AccountDAO">
	<!-- =========================================================== -->
	<!-- 定义resultMap -->
	<!-- =========================================================== -->
	<resultMap id="AccountResultMap" type="com.haier.isales.system.account.domain.AccountDomain">
		<id column="id" property="id"  jdbcType="BIGINT"  />
		<result column="operator_id" property="operatorId"  jdbcType="BIGINT"  />
		<result column="account_id" property="accountId"  jdbcType="BIGINT"  />
		<result column="account_name" property="accountName"  jdbcType="VARCHAR"  />
		<result column="password" property="password"  jdbcType="VARCHAR"  />
		<result column="account_type" property="accountType"  jdbcType="VARCHAR"  />
		<result column="account_status" property="accountStatus"  jdbcType="VARCHAR"  />
		<result column="create_id" property="createId"  jdbcType="BIGINT"  />
		<result column="create_name" property="createName"  jdbcType="VARCHAR"  />
		<result column="create_time" property="createTime"  jdbcType="TIMESTAMP"  />
		<result column="update_id" property="updateId"  jdbcType="BIGINT"  />
		<result column="update_name" property="updateName"  jdbcType="VARCHAR"  />
		<result column="update_time" property="updateTime"  jdbcType="TIMESTAMP"  />
		<result column="user_status" property="userStatus" jdbcType="VARCHAR" />
		<result column="audit_status" property="auditStatus" jdbcType="VARCHAR" />
		<result column="default_password" property="defaultPassword" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- =========================================================== -->
	<!-- 一些公共变量设置 -->
	<!-- =========================================================== -->
	<!-- 查询的所有列 -->
	<sql id="all_Column_List">
	ID	,
	OPERATOR_ID	,
	ACCOUNT_ID	,
	ACCOUNT_NAME	,
	PASSWORD	,
	ACCOUNT_TYPE	,
	ACCOUNT_STATUS	,
	CREATE_ID	,
	CREATE_NAME	,
	CREATE_TIME	,
	UPDATE_ID	,
	UPDATE_NAME	,
	UPDATE_TIME		
	</sql>
	
	<!-- 分页查询的公共变量 -->
	<sql id="pagination_Tail">
	<![CDATA[
		limit #{pageCond.firstResult},#{pageCond.pageSize}
	]]>
	</sql>
	
	<!-- 查询的所有变量判断 -->
	<sql id="searchConditions">
		<if test="entity.id!=null">and id=#{entity.id}</if>
		<if test="entity.operatorId!=null">and operator_id=#{entity.operatorId}</if>
		<if test="entity.accountId!=null">and account_id=#{entity.accountId}</if>
		<if test="entity.accountName!=null">and account_name like CONCAT('%',#{entity.accountName},'%')</if>
		<if test="entity.password!=null">and password like CONCAT('%',#{entity.password},'%')</if>
		<if test="entity.accountType!=null">and account_type like CONCAT('%',#{entity.accountType},'%')</if>
		<if test="entity.accountStatus!=null">and account_status like CONCAT('%',#{entity.accountStatus},'%')</if>
		<if test="entity.createId!=null">and create_id=#{entity.createId}</if>
		<if test="entity.createName!=null">and create_name like CONCAT('%',#{entity.createName},'%')</if>
		<!-- java.util.Date create_time has been ignored!!! -->
		<if test="entity.updateId!=null">and update_id=#{entity.updateId}</if>
		<if test="entity.updateName!=null">and update_name like CONCAT('%',#{entity.updateName},'%')</if>
		<!-- java.util.Date update_time has been ignored!!! -->
	</sql>
	
	<!-- =========================================================== -->
	<!-- CommonDao中的dao实现类 -->
	<!-- =========================================================== -->
	<!-- 根据主键查询实体类的方法 -->
	<select id="findById" resultMap="AccountResultMap"
		parameterType="Long">
		select <include refid="all_Column_List"/>
		from isales_sys.t_qn_user_account
		where id = #{id}
	</select>
	
	<!-- 查询此实体表中所有数据的数量 -->
	<select id="count" resultType="long">
		select count(1) 
		from isales_sys.t_qn_user_account
	</select>
	
	<!-- 实体的保存法方法 -->
	<insert id="save" parameterType="com.haier.isales.system.account.domain.AccountDomain"  useGeneratedKeys="true" keyProperty="id" >
		insert into isales_sys.t_qn_user_account
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="operatorId!=null">
				OPERATOR_ID	,
			</if>
			<if test="accountId!=null">
				ACCOUNT_ID	,
			</if>
			<if test="accountName!=null">
				ACCOUNT_NAME	,
			</if>
			<if test="password!=null">
				PASSWORD	,
			</if>
			<if test="accountType!=null">
				ACCOUNT_TYPE	,
			</if>
			<if test="accountStatus!=null">
				ACCOUNT_STATUS	,
			</if>
			<if test="createId!=null">
				CREATE_ID	,
			</if>
			<if test="createName!=null">
				CREATE_NAME	,
			</if>
			<if test="createTime!=null">
				CREATE_TIME	,
			</if>
			<if test="updateId!=null">
				UPDATE_ID	,
			</if>
			<if test="updateName!=null">
				UPDATE_NAME	,
			</if>
			<if test="updateTime!=null">
				UPDATE_TIME		
			</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="operatorId!=null">
				#{operatorId}	,
			</if>
			<if test="accountId!=null">
				#{accountId}	,
			</if>
			<if test="accountName!=null">
				#{accountName}	,
			</if>
			<if test="password!=null">
				#{password}	,
			</if>
			<if test="accountType!=null">
				#{accountType}	,
			</if>
			<if test="accountStatus!=null">
				#{accountStatus}	,
			</if>
			<if test="createId!=null">
				#{createId}	,
			</if>
			<if test="createName!=null">
				#{createName}	,
			</if>
			<if test="createTime!=null">
				#{createTime}	,
			</if>
			<if test="updateId!=null">
				#{updateId}	,
			</if>
			<if test="updateName!=null">
				#{updateName}	,
			</if>
			<if test="updateTime!=null">
				#{updateTime}		
			</if>
		</trim>
	</insert>
	
	<!-- 实体的更新方法 -->
	<update id="update" parameterType="com.haier.isales.system.account.domain.AccountDomain">
		update isales_sys.t_qn_user_account
		<set>
			OPERATOR_ID = #{operatorId},
			ACCOUNT_ID = #{accountId},
			ACCOUNT_NAME = #{accountName},
			PASSWORD = #{password},
			ACCOUNT_TYPE = #{accountType},
			ACCOUNT_STATUS = #{accountStatus},
			CREATE_ID = #{createId},
			CREATE_NAME = #{createName},
			CREATE_TIME = #{createTime},
			UPDATE_ID = #{updateId},
			UPDATE_NAME = #{updateName},
			UPDATE_TIME = #{updateTime},
		</set>
		where id = #{id}
	</update>	
	
	<!-- 按照ID主键删除一条记录的功能 -->
	<delete id="delete" parameterType="Long">
		delete from isales_sys.t_qn_user_account 
		where id = #{id}
	</delete>
	
	<!-- 根据参数查询分页查询所有的对象内容 -->
	<select id="findByParams" resultMap="AccountResultMap" >
		select <include refid="all_Column_List"/>
		from isales_sys.t_qn_user_account
		where 1=1
		<include refid="searchConditions"/>
		<include refid="pagination_Tail"/>
	</select>
	<!-- 根据参数查询分页查询所有的对象内容 -->
	<select id="findCountByParams" resultType="integer" >
		select count(1)
		from isales_sys.t_qn_user_account
		where 1=1
		<include refid="searchConditions"/>
	</select>
</mapper>